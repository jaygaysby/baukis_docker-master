AllCops:
  TargetRubyVersion: 2.4
  # RuboCop has a bunch of cops enabled by default. This setting tells RuboCop
  # to ignore them, so only the ones explicitly set in this file are enabled.
  DisabledByDefault: true
  Exclude:
    - "**/templates/**/*"
    - "**/vendor/**/*"
    - "actionpack/lib/action_dispatch/journey/parser.rb"
    - "*.slim"
 
# Prefer &&/|| over and/or.
# and or ではなく && || を利用する。
Style/AndOr:
  Enabled: true
 
# Do not use braces for hash literals when they are the last argument of a
# method call.
# 例)
# method({ key: "value" }) => ☓
# method(key: "value") => ○
Style/BracesAroundHashParameters:
  Enabled: true
  EnforcedStyle: context_dependent
 
# Align `when` with `case`.
# when を case と同じインデントに揃える。
Layout/CaseIndentation:
  Enabled: true
 
# Align comments with method definitions.
# コメントはメソッド定義に揃える。
Layout/CommentIndentation:
  Enabled: true
 
# マジックコメントのあとは1行空ける。
Layout/EmptyLineAfterMagicComment:
  Enabled: true
 
# In a regular class definition, no empty lines around the body.
# classの直後とend直前に空行は入れない。
Layout/EmptyLinesAroundClassBody:
  Enabled: true
 
# In a regular method definition, no empty lines around the body.
# メソッド定義の直後とend直前に空行は入れない。
Layout/EmptyLinesAroundMethodBody:
  Enabled: true
 
# In a regular module definition, no empty lines around the body.
# moduleの直後とend直前に空行は入れない。
Layout/EmptyLinesAroundModuleBody:
  Enabled: true
 
# 例)
# method(
# first,
# second) ☓
#
# method(
#   first,
# second) ○
Layout/FirstParameterIndentation:
  Enabled: true
 
# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
# { :a =>  :b } ではなく { a: :b } と記述する。
Style/HashSyntax:
  Enabled: true
 
# Method definitions after `private` or `protected` isolated calls need one
# extra level of indentation.
# private, protectedの後はインデントを1つ下げる。
Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: rails
 
# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true
 
Layout/SpaceAfterColon:
  Enabled: true
 
Layout/SpaceAfterComma:
  Enabled: true
 
Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true
 
Layout/SpaceAroundKeyword:
  Enabled: true
 
Layout/SpaceAroundOperators:
  Enabled: true
 
Layout/SpaceBeforeFirstArg:
    Enabled: true
 
# Defining a method with parameters needs parentheses.
# 例)
# def method() ☓
# def method ○
# def method param1, param2 ☓
# def method(param1, param2) ○
Style/MethodDefParentheses:
  Enabled: true
 
Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always
  Exclude:
    - "*.jbuilder"
    - "actionview/test/**/*.builder"
    - "actionview/test/**/*.ruby"
    - "actionpack/test/**/*.builder"
    - "actionpack/test/**/*.ruby"
 
# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true
 
# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true
 
# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
 
Layout/SpaceInsideParens:
  Enabled: true
 
# Check quotes usage according to lint rule below.
# 文字列はダブルクォート("")で統一する。
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes
 
# Detect hard tabs, no hard tabs.
Layout/Tab:
  Enabled: true
 
# Blank lines should not have any spaces.
Layout/TrailingBlankLines:
  Enabled: true
 
# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true
 
# Use quotes for string literals when they are enough.
# %q は使わない。
Style/UnneededPercentQ:
  Enabled: true
 
# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Lint/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable
 
# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
# 例)
# Class.method( param ) ☓
# Class.method param ☓
# Class.method(param) ○
Lint/RequireParentheses:
  Enabled: true
